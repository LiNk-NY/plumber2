% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_handlers.R
\name{api_message}
\alias{api_message}
\title{Add a handler to a WebSocket message}
\usage{
api_message(api, handler)
}
\arguments{
\item{api}{A plumber2 api object to add the handler to}

\item{handler}{A function conforming to the specifications laid out in
Details}
}
\value{
This functions return the \code{api} object allowing for easy chaining
with the pipe
}
\description{
WebSockets is a bidirectional communication channel that can be established
at the request of the client. While websocket communication is not really
part of a standard REST api, it has many uses and can easily be used together
with one.
}
\details{
A handler for a websocket message is much simpler than for requests in
general since it doesn't have to concern itself with methods, paths, and
responses. Any message handler registered will get called in sequence when a
websocket message is recieved from a client. Still, a few expectations apply
\subsection{Handler Arguments}{

The handler can take any of the following arguments:
\itemize{
\item \code{message}: Either a raw vector if the message recieved is in binary form or
a single string, giving the message sent from the client
\item \code{server}: The \link{Plumber2} object representing your server implementation
\item \code{client_id}: A string uniquely identifying the session the request comes
from
\item \code{request}: The request that was initially used to establish the websocket
connection with the client as a \link[reqres:Request]{reqres::Request} object
}
}

\subsection{Handler Return Value}{

It is not expected that a websocket message sends a response and thus the
handler is not required to do anything like that. However, if the handler
returns either a raw vector or a single string it is taken as a signal to
send this back to the client. Any other return value is silently ignored.
}
}
